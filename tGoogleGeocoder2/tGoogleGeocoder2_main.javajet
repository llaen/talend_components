<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map		
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();	
%>

<%
String connName = null;
if (node.getIncomingConnections().size()==1) {
	IConnection conn = node.getIncomingConnections().get(0);
	connName = conn.getName();

	String ColumnSource = ElementParameterParser.getValue(node, "__ADDRESS_COLUMN__");
	List<IMetadataTable> metadatas = node.getMetadataList();
	IMetadataTable metadata = metadatas.get(0);
	List<IMetadataColumn> columnsout = metadata.getListColumns();

	List< ? extends IConnection> connsout = node.getOutgoingConnections(); 
	if (connsout != null) {
		for (int i = 0; i < connsout.size(); i++) {
			IConnection connout = connsout.get(i);
			if(connout.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				for (int j = 0; j < columnsout.size(); j++) {
					IMetadataColumn columnout=columnsout.get(j);
					if (!columnout.getLabel().equals("lat") && !columnout.getLabel().equals("lon")) {
%>
						<%=connout.getName() %>.<%=columnout.getLabel() %>=<%=connName %>.<%=columnout.getLabel() %>;
<%
					}
				}
%>
				String url = "https://maps.googleapis.com/maps/api/geocode/output";
				url += "?address="+java.net.URLEncoder.encode(<%=connName %>.<%=ColumnSource %>, "UTF-8");
				url += "&sensor=false";
				if (<%=ElementParameterParser.getValue(node, "__CLIENT__")%> != null && <%=ElementParameterParser.getValue(node, "__CLIENT__")%> != "" &&
					<%=ElementParameterParser.getValue(node, "__SIGNATURE__")%> != null && <%=ElementParameterParser.getValue(node, "__SIGNATURE__")%> != "") {
					url += "&client=" + <%=ElementParameterParser.getValue(node, "__CLIENT__")%>;
					url += "&signature=" + <%=ElementParameterParser.getValue(node, "__SIGNATURE__")%>;
				}
				java.io.BufferedReader in_<%=cid%> = new java.io.BufferedReader (new java.io.InputStreamReader (new java.net.URL ().openStream ()));

				//process that send the result to output
				String line_<%=cid %>;
				int statusCode_<%=cid %> = -1;
				int locok_<%=cid%> = -1;
				while ((line_<%=cid %> = in_<%=cid %>.readLine ()) != null) {
					statusCode_<%=cid %> = Integer.parseInt (line_<%=cid %>.substring (0, 3));
					if (statusCode_<%=cid %> == 200){
						locok_<%=cid%> = 1;
						<%=connout.getName() %>.lat = new Double(line_<%=cid %>.substring ("200,6,".length (), line_<%=cid %>.indexOf (',', "200,6,".length ())));
						<%=connout.getName() %>.lon = new Double(line_<%=cid %>.substring (line_<%=cid %>.indexOf (',', "200,6,".length ())+1, line_<%=cid %>.length ()));
					}
				}
				
<%
			}
		}
	}
}
%>